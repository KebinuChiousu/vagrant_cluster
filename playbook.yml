---
- hosts: all
  become: True
  gather_facts: no
  remote_user: vagrant
  tasks:
  - include_vars: users.yml

  - name: install python3
    raw: "apk add --no-progress python3"

  - apk:
      name: bash,parted,xfsprogs,py3-pip,python3-dev,libffi-dev,openssl-dev,gcc,libc-dev,make,docker
      state: latest
      update_cache: yes

  - name: create /sdb1
    parted:
      device: /dev/sdb
      number: 1
      state: present

  - name: format /dev/sdb1 with xfs
    filesystem:
      fstype: xfs
      dev: /dev/sdb1

  - name: update fstab
    shell:
      cmd: |
        UUID=$(blkid /dev/sdb1 | awk '{print $2}' | sed 's|"||g')
        mkdir -p /var/lib/docker
        echo $UUID /var/lib/docker xfs defaults 0 1 >> /etc/fstab
        mount -a

  - name: configure docker
    shell:
      cmd: |
        rc-update add docker boot
        service docker start
        python3 -m pip install docker docker-compose

  - name: Add users | create users, shell, home dirs
    user: 
      name: '{{ item.username }}'
      groups: '{{ item.groups }}'
      shell: "/bin/bash" 
      createhome: yes 
      comment : 'create with ansible'
    with_items: '{{users}}'

  - name: generate passwords for users
    shell:
      cmd: |
        < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-32};echo; > /tmp/passwd
        echo {{item.username}}:$(cat /tmp/passwd) | chpasswd -c SHA512
    args:
      executable: /bin/bash
    with_items: '{{users}}'

  - name: Setup | authorized key upload
    authorized_key: 
      user: '{{ item.username }}'
      key: "{{ lookup('file', 'users/{{ item.username }}.pub', errors='ignore') }}"
    with_items: '{{users}}'

  - name: make dirs 0755
    command: find /home -type d ! -perm 0755 -exec chmod 0755 {} \;

  - name: make files 0644 
    command: find /home -type f ! -perm 0644 -exec chmod 0644 {} \;

  - name: update hosts file 
    copy:
      src: hosts
      dest: /etc/hosts
      owner: root
      group: root
      mode: '0644'
